[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\s.tiwari\AppData\Local\Temp\idea9.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\s.tiwari\AppData\Local\Temp\idea9.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 1.8.0_202)
[debug]       Load.loadUnit: plugins took 202.4631ms
[debug]       Load.loadUnit: defsScala took 0.3487ms
[debug] [Loading] Scanning directory C:\Users\s.tiwari\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\s.tiwari\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.2827 ms
[debug]           Load.resolveProject(global-plugins) took 42.6328ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\s.tiwari\.sbt\1.0\plugins, plugins: List(<none>))) took 89.2042ms
[debug] [Loading] Done in C:\Users\s.tiwari\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 113.209ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2467ms
[debug]     Load.loadUnit(file:/C:/Users/s.tiwari/.sbt/1.0/plugins/, ...) took 324.7886ms
[debug]   Load.apply: load took 495.0825ms
[debug]   Load.apply: resolveProjects took 7.0067ms
[debug]   Load.apply: finalTransforms took 54.5575ms
[debug]   Load.apply: config.delegates took 10.9811ms
[debug]   Load.apply: Def.make(settings)... took 437.5369ms
[debug]   Load.apply: structureIndex took 104.6023ms
[debug]   Load.apply: mkStreams took 2.1727ms
[info] loading global plugins from C:\Users\s.tiwari\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3087.8454ms
[debug]           Load.loadUnit: plugins took 42.6996ms
[debug]           Load.loadUnit: defsScala took 0.0044ms
[debug] [Loading] Scanning directory C:\Users\s.tiwari\IdeaProjects\SignalTopology\project
[debug]             Load.loadUnit: mkEval took 14.1404ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\s.tiwari\IdeaProjects\SignalTopology\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.3863 ms
[info] loading settings for project signaltopology-build from plugins.sbt,idea9.sbt ...
[debug]               Load.resolveProject(signaltopology-build) took 15.8321ms
[debug]             Load.loadTransitive: finalizeProject(Project(id signaltopology-build, base: C:\Users\s.tiwari\IdeaProjects\SignalTopology\project, plugins: List(<none>))) took 21.6164ms
[debug] [Loading] Done in C:\Users\s.tiwari\IdeaProjects\SignalTopology\project, returning: (signaltopology-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 312.8658ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.3739ms
[debug]         Load.loadUnit(file:/C:/Users/s.tiwari/IdeaProjects/SignalTopology/project/, ...) took 366.835ms
[debug]       Load.apply: load took 369.0149ms
[debug]       Load.apply: resolveProjects took 0.1801ms
[debug]       Load.apply: finalTransforms took 10.3986ms
[debug]       Load.apply: config.delegates took 0.5447ms
[debug]       Load.apply: Def.make(settings)... took 114.5545ms
[debug]       Load.apply: structureIndex took 35.2741ms
[debug]       Load.apply: mkStreams took 0.0053ms
[info] loading project definition from C:\Users\s.tiwari\IdeaProjects\SignalTopology\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1077.5378ms
[debug]     Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory C:\Users\s.tiwari\IdeaProjects\SignalTopology
[debug]       Load.loadUnit: mkEval took 0.4619ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.736 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 31.2123ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\s.tiwari\IdeaProjects\SignalTopology, plugins: List(<none>))) took 38.302ms
[debug] [Loading] Done in C:\Users\s.tiwari\IdeaProjects\SignalTopology, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 210.8884ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.2767ms
[debug]   Load.loadUnit(file:/C:/Users/s.tiwari/IdeaProjects/SignalTopology/, ...) took 1295.9289ms
[debug] Load.apply: load took 1298.0277ms
[debug] Load.apply: resolveProjects took 0.1663ms
[debug] Load.apply: finalTransforms took 22.8197ms
[debug] Load.apply: config.delegates took 0.3549ms
[debug] Load.apply: Def.make(settings)... took 124.6043ms
[debug] Load.apply: structureIndex took 25.8699ms
[debug] Load.apply: mkStreams took 0.0052ms
[info] set current project to SignalTopology (in build file:/C:/Users/s.tiwari/IdeaProjects/SignalTopology/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60625 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60625, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to SignalTopology (in build file:/C:/Users/s.tiwari/IdeaProjects/SignalTopology/)
[debug] > Exec(idea-shell, None, None)
